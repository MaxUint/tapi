// Core Solar Plant

piece base;

#define SMOKEPIECE1 base
#define ANIM_VARIABLE TRUE
#define	SIG_HIT		2

#include "StateChg.h"
#include "..\anim3d\corsolar\activatescr.bos"
#include "..\anim3d\corsolar\deactivatescr.bos"
#include "smokeunit.h"
#include "exptype.h"
#include "yard.h"

#define ACTIVATECMD call-script activatescr();
#define DEACTIVATECMD call-script deactivatescr();
#include "StateChg.h"

Create()
	{
	dont-shade base;
	dont-shade leg1;
	dont-shade leg2;
	dont-shade leg3;
	dont-shade leg4;
	dont-shade shell;
	dont-shade wing1;
	dont-shade wing2;
	dont-shade wing3;
	dont-shade wing4;
	dont-cache leg1;
	dont-cache leg2;
	dont-cache leg3;
	dont-cache leg4;
	dont-cache shell;
	dont-cache wing1;
	dont-cache wing2;
	dont-cache wing3;
	dont-cache wing4;
	call-script InitState();
	start-script SmokeUnit();
	}

Activate()
	{
	set ARMORED to FALSE;
	start-script RequestState( ACTIVE );
	}

Deactivate()
	{
	set ARMORED to TRUE;
	start-script RequestState( INACTIVE );
	}

HitByWeapon(anglex,anglez)
	{
	signal SIG_HIT;
	set-signal-mask SIG_HIT;
	set ACTIVATION to 0;
	sleep 8000;
	set ACTIVATION to 1;
	}

SweetSpot(piecenum)
	{
	piecenum=base;
	}

Killed( severity, corpsetype )
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode base type	BITMAPONLY | BITMAP1;
		explode leg1 type	BITMAPONLY | BITMAP2;
		explode leg2 type	BITMAPONLY | BITMAP3;
		explode leg3 type	BITMAPONLY | BITMAP4;
		explode leg4 type	BITMAPONLY | BITMAP5;
		explode shell type	BITMAPONLY | BITMAP1;
		explode wing1 type	BITMAPONLY | BITMAP2;
		explode wing2 type	BITMAPONLY | BITMAP3;
		explode wing3 type	BITMAPONLY | BITMAP4;
		explode wing4 type	BITMAPONLY | BITMAP5;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode base type	BITMAPONLY | BITMAP1;
		explode leg1 type	SHATTER | BITMAP2;
		explode leg2 type	SHATTER | BITMAP3;
		explode leg3 type	BITMAPONLY | BITMAP4;
		explode leg4 type	BITMAPONLY | BITMAP5;
		explode shell type	BITMAPONLY | BITMAP1;
		explode wing1 type	FALL | BITMAP2;
		explode wing2 type	FALL | BITMAP3;
		explode wing3 type	BITMAPONLY | BITMAP4;
		explode wing4 type	BITMAPONLY | BITMAP5;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode base type	BITMAPONLY | BITMAP1;
		explode leg1 type	SHATTER | BITMAP2;
		explode leg2 type	SHATTER | BITMAP3;
		explode leg3 type	BITMAPONLY | BITMAP4;
		explode leg4 type	BITMAPONLY | BITMAP5;
		explode shell type	BITMAPONLY | BITMAP1;
		explode wing1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode wing2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode wing3 type	BITMAPONLY | BITMAP4;
		explode wing4 type	BITMAPONLY | BITMAP5;
		return( 0 );
		}

	corpsetype = 3;
	explode base type	BITMAPONLY | BITMAP1;
	explode leg1 type	SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode leg2 type	SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode leg3 type	BITMAPONLY | BITMAP4;
	explode leg4 type	BITMAPONLY | BITMAP5;
	explode shell type	BITMAPONLY | BITMAP1;
	explode wing1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode wing2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode wing3 type	BITMAPONLY | BITMAP4;
	explode wing4 type	BITMAPONLY | BITMAP5;
	return( 0 );
	}
