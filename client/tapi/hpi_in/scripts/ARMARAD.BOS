// Arm Radar Tower script

piece base,turret,dish1,dish2,arm1,arm2;

#define SIG_MOVEMENT	2
#define SIG_HIT		4
#define SMOKEPIECE1 base

#include "StateChg.h"
#include "smokeunit.h"
#include "exptype.h"

Go()
	{
	move post to y-axis [9.1] speed [16.134753];
	wait-for-move post along y-axis;
	turn dish1 to z-axis <84.150000> speed <147.631579>;
	turn dish2 to z-axis <-84.150000> speed <147.631579>;
	wait-for-turn dish1 around z-axis;
	wait-for-turn dish2 around z-axis;
	spin turret around y-axis speed <-30>;
	spin arm1 around x-axis speed <100>;
	spin arm2 around x-axis speed <-100>;
	}

Stop()
	{
	turn turret to y-axis <0> speed <60>;
	turn arm1 to x-axis <0> speed <100>;
	turn arm2 to x-axis <0> speed <100>;
	wait-for-turn turret around y-axis;
	wait-for-turn arm1 around x-axis;
	wait-for-turn arm2 around x-axis;
	turn dish1 to z-axis <0.000000> speed <178.662420>;
	turn dish2 to z-axis <0.000000> speed <178.662420>;
	wait-for-turn dish1 around z-axis;
	wait-for-turn dish2 around z-axis;
	move post to y-axis [0.000000] speed [19.320597];
	wait-for-move post along y-axis;
	}

#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h"


Create()
	{
	dont-shade turret;
	dont-shade arm1;
	dont-shade arm2;
	dont-shade dish1;
	dont-shade dish2;
	dont-cache turret;
	dont-cache arm1;
	dont-cache arm2;
	dont-cache dish1;
	dont-cache dish2;
	call-script InitState();
	start-script SmokeUnit();
	}

Activate()
	{
	start-script RequestState( ACTIVE );
	}

Deactivate()
	{
	start-script RequestState( INACTIVE );
	}

HitByWeapon(anglex,anglez)
	{
	signal SIG_HIT;
	set-signal-mask SIG_HIT;
	set ACTIVATION to 0;
	sleep 8000;
	set ACTIVATION to 1;
	}

SweetSpot(piecenum)
	{
	piecenum=base;
	}

Killed( severity, corpsetype )
	{
	if (severity <= 25)
		{
		corpsetype = 1;

		// Blow off the pieces in varied ways
		explode arm1 type	BITMAPONLY | BITMAP2;
		explode arm2 type	BITMAPONLY | BITMAP2;
		explode base type	BITMAPONLY | BITMAP2;
		explode dish1 type	BITMAPONLY | BITMAP1;
		explode dish2 type	BITMAPONLY | BITMAP1;
		explode post type	BITMAPONLY | BITMAP1;
		explode turret type	BITMAPONLY | BITMAP1;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;

		// Blow off the pieces in varied ways
		explode arm1 type	FALL | BITMAP2;
		explode arm2 type	FALL | BITMAP2;
		explode base type	BITMAPONLY | BITMAP2;
		explode dish1 type	BITMAPONLY | BITMAP1;
		explode dish2 type	BITMAPONLY | BITMAP1;
		explode post type	BITMAPONLY | BITMAP1;
		explode turret type	SHATTER | BITMAP1;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;

		// Blow off the pieces in varied ways
		explode arm1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode arm2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode base type	BITMAPONLY | BITMAP2;
		explode dish1 type	BITMAPONLY | BITMAP1;
		explode dish2 type	BITMAPONLY | BITMAP1;
		explode post type	BITMAPONLY | BITMAP1;
		explode turret type	SHATTER | BITMAP1;
		return( 0 );
		}

	// If severity is over 50, the unit just disintigrated.
	corpsetype = 3;

	explode arm1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode arm2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode base type	BITMAPONLY | BITMAP2;
	explode dish1 type	BITMAPONLY | BITMAP1;
	explode dish2 type	BITMAPONLY | BITMAP1;
	explode post type	BITMAPONLY | BITMAP1;
	explode turret type	SHATTER | EXPLODE_ON_HIT | BITMAP1;
	return( 0 );
	}
