//Core Battleship Script

piece  flarea,barrelb1,barrelb2,barrelb3,base,guna,turreta,turretb;

static-var next_barrela,next_barrelb;

#define SIG_MOVEMENT1	2
#define SIG_MOVEMENT2	4
#define	SIG_WAKE	8
#define SMOKEPIECE1 base
#include "smokeunit.h"
#include "exptype.h"
#include "SFXtype.h"

Create()
	{
	hide flarea;
	hide flareb1;
	hide flareb2;
	hide flareb3;
	next_barrela=1;
	next_barrelb=1;
	start-script SmokeUnit();
	}

StartMoving()
	{
	signal SIG_WAKE;
	set-signal-mask SIG_WAKE;
	while (TRUE)
		{
		emit-sfx SFXTYPE_WAKE1 from wake1;
		emit-sfx SFXTYPE_WAKE1 from wake2;
		sleep 300;
		}
	}

StopMoving()
	{
	signal SIG_WAKE;
	}

AimPrimary(heading,pitch)
	{
	signal SIG_MOVEMENT1;
	set-signal-mask SIG_MOVEMENT1;
	turn turreta to y-axis heading speed <200>;
	wait-for-turn turreta around y-axis;
	return(TRUE);
	}

AimSecondary(heading,pitch)
	{
	signal SIG_MOVEMENT2;            // kill off other aim scripts
	set-signal-mask SIG_MOVEMENT2;   // so other scripts can kill us
	turn turretb to y-axis heading speed <55>;
	turn turretb to x-axis (0-pitch) speed <30>;
	wait-for-turn turretb around y-axis;
	wait-for-turn turretb around x-axis;
	return(TRUE);
	}

FirePrimary()
	{
	next_barrela=next_barrela+1;
	if (next_barrela==4) {
		next_barrela=1; }
	if (next_barrela==1) {
//		show flarea;
//		sleep 150;
//		hide flarea;
		sleep 250;
		turn guna to z-axis <0> speed <400>;
		wait-for-turn guna around z-axis; }
	if (next_barrela==2) {
//		show flarea;
//		sleep 150;
//		hide flarea;
		sleep 250;
		turn guna to z-axis <120> speed <400>;
		wait-for-turn guna around z-axis; }
	if (next_barrela==3) {
//		show flarea;
//		sleep 150;
//		hide flarea;
		sleep 250;
		turn guna to z-axis 0 - <120> speed <400>;
		wait-for-turn guna around z-axis; }
	}
	
FireSecondary()
	{
	if (next_barrelb==1)
		{
		move barrelb1 to z-axis [-2.4] speed [500];
		wait-for-move barrelb1 along z-axis;
		move barrelb1 to z-axis [0] speed [3.0];
		show flareb1;
		sleep 150;
		hide flareb1;
		}
	if (next_barrelb==2)
		{
		move barrelb2 to z-axis [-2.4] speed [500];
		wait-for-move barrelb2 along z-axis;
		move barrelb2 to z-axis [0] speed [3.0];
		show flareb2;
		sleep 150;
		hide flareb2;
		}
	if (next_barrelb==3)
		{
		move barrelb3 to z-axis [-2.4] speed [500];
		wait-for-move barrelb3 along z-axis;
		move barrelb3 to z-axis [0] speed [3.0];
		show flareb3;
		sleep 150;
		hide flareb3;
		}
	next_barrelb=next_barrelb+1;
	if (next_barrelb==4) {
		next_barrelb=1; }
	}

AimFromPrimary(piecenum)
	{
	piecenum=turreta;
	}

QueryPrimary(piecenum)
	{
	piecenum=flarea;
	}

AimFromSecondary(piecenum)
	{
	piecenum=turretb;
	}

QuerySecondary(piecenum)
	{
	if (next_barrelb==1) {
		piecenum=flareb1; }
	if (next_barrelb==2) {
		piecenum=flareb2; }
	if (next_barrelb==3) {
		piecenum=flareb3; }
	}

SweetSpot(piecenum)
	{
	piecenum=base;
	}

Killed( severity, corpsetype )
	{
	hide flarea;
	hide flareb1;
	hide flareb2;
	hide flareb3;
	if (severity <= 25)
		{
		corpsetype = 1;
		explode barrelb1 type	BITMAPONLY | BITMAP1;
		explode barrelb2 type	BITMAPONLY | BITMAP2;
		explode barrelb3 type	BITMAPONLY | BITMAP3;
		explode base type	BITMAPONLY | BITMAP4;
		explode flarea type	BITMAPONLY | BITMAP5;
		explode flareb1 type	BITMAPONLY | BITMAP1;
		explode flareb2 type	BITMAPONLY | BITMAP2;
		explode flareb3 type	BITMAPONLY | BITMAP3;
		explode guna type	BITMAPONLY | BITMAP4;
		explode sleeveb type	BITMAPONLY | BITMAP5;
		explode turreta type	BITMAPONLY | BITMAP1;
		explode turretb type	BITMAPONLY | BITMAP2;
		explode wake1 type	BITMAPONLY | BITMAP3;
		explode wake2 type	BITMAPONLY | BITMAP4;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode barrelb1 type	FALL | BITMAP1;
		explode barrelb2 type	FALL | BITMAP2;
		explode barrelb3 type	FALL | BITMAP3;
		explode base type	BITMAPONLY | BITMAP4;
		explode flarea type	FALL | BITMAP5;
		explode flareb1 type	FALL | BITMAP1;
		explode flareb2 type	FALL | BITMAP2;
		explode flareb3 type	FALL | BITMAP3;
		explode guna type	FALL | BITMAP4;
		explode sleeveb type	SHATTER | BITMAP5;
		explode turreta type	BITMAPONLY | BITMAP1;
		explode turretb type	BITMAPONLY | BITMAP2;
		explode wake1 type	FALL | BITMAP3;
		explode wake2 type	FALL | BITMAP4;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode barrelb1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrelb2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrelb3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode base type	BITMAPONLY | BITMAP4;
		explode flarea type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode flareb1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode flareb2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode flareb3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode guna type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode sleeveb type	SHATTER | BITMAP5;
		explode turreta type	BITMAPONLY | BITMAP1;
		explode turretb type	BITMAPONLY | BITMAP2;
		explode wake1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode wake2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return( 0 );
		}

	corpsetype = 3;
	explode barrelb1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrelb2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrelb3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode base type	BITMAPONLY | BITMAP4;
	explode flarea type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode flareb1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode flareb2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode flareb3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode guna type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode sleeveb type	SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode turreta type	BITMAPONLY | BITMAP1;
	explode turretb type	BITMAPONLY | BITMAP2;
	explode wake1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode wake2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	return( 0 );
	}
