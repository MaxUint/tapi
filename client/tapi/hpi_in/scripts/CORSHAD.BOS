// Core Shadow Script

piece bombay,base;

#define SMOKEPIECE1 base
#define ANIM_VARIABLE TRUE

#include "StateChg.h"
#include "smokeunit.h"
#include "exptype.h"

Go()
	{
	turn winga to z-axis <-90> speed <60>;
	turn wingb to z-axis <90> speed <60>;
	}

Stop()
	{
	turn winga to z-axis <0> speed <20>;
	turn wingb to z-axis <0> speed <20>;
	}

#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h"

Create()
	{
	call-script InitState();
	start-script SmokeUnit();
	}
Activate()
	{
	start-script RequestState( ACTIVE );
	}

Deactivate()
	{
	start-script RequestState( INACTIVE );
	}

QueryPrimary(piecenum)
	{
	piecenum = bombay;
	}

SweetSpot(piecenum)
	{
	piecenum=base;
	}

Killed( severity, corpsetype )
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode base type	BITMAPONLY | BITMAP1;
		explode bombay type	BITMAPONLY | BITMAP2;
		explode thrusta1 type	BITMAPONLY | BITMAP3;
		explode thrusta2 type	BITMAPONLY | BITMAP4;
		explode thrustb type	BITMAPONLY | BITMAP5;
		explode winga type	BITMAPONLY | BITMAP1;
		explode wingb type	BITMAPONLY | BITMAP2;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode base type	BITMAPONLY | BITMAP1;
		explode bombay type	FALL | BITMAP2;
		explode thrusta1 type	FALL | BITMAP3;
		explode thrusta2 type	FALL | BITMAP4;
		explode thrustb type	FALL | BITMAP5;
		explode winga type	SHATTER | BITMAP1;
		explode wingb type	BITMAPONLY | BITMAP2;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode base type	BITMAPONLY | BITMAP1;
		explode bombay type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode thrusta1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode thrusta2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode thrustb type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode winga type	SHATTER | BITMAP1;
		explode wingb type	BITMAPONLY | BITMAP2;
		return( 0 );
		}

	corpsetype = 3;
	explode base type	BITMAPONLY | BITMAP1;
	explode bombay type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode thrusta1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode thrusta2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode thrustb type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode winga type	SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode wingb type	BITMAPONLY | BITMAP2;
	return( 0 );
	}
