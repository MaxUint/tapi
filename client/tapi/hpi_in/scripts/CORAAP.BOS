// Arm Advanced Aircraft Plant

piece base,pad,beam1,beam2;

static-var spray,unitviewer;

#define	SIG_ACTIVATE	2
#define SMOKEPIECE1 base
#define ANIM_VARIABLE TRUE

#include "StateChg.h"
#include "..\anim3d\coraap\activatescr.bos"
#include "..\anim3d\coraap\deactivatescr.bos"
#include "smokeunit.h"
#include "exptype.h"
#include "yard.h"

Go()
	{
	dont-cache beam1;
	dont-cache beam2;
	dont-cache block1;
	dont-cache block2;
	dont-cache bump1;
	dont-cache bump2;
	dont-cache conduit1;
	dont-cache conduit2;
	dont-cache gun1;
	dont-cache gun2;
	dont-cache head1;
	dont-cache head2;
	dont-cache pedistal;
	dont-cache sleeve1;
	dont-cache sleeve2;
	call-script activatescr();
	call-script OpenYard();
	set INBUILDSTANCE to TRUE;
	}

Stop()
	{
	set INBUILDSTANCE to FALSE;
	call-script CloseYard();
	call-script deactivatescr();
	cache beam1;
	cache beam2;
	cache block1;
	cache block2;
	cache bump1;
	cache bump2;
	cache conduit1;
	cache conduit2;
	cache gun1;
	cache gun2;
	cache head1;
	cache head2;
	cache pedistal;
	cache sleeve1;
	cache sleeve2;
	}

#define ACTIVATECMD call-script Go();
#define DEACTIVATECMD call-script Stop();
#include "StateChg.h"

Create()
	{
	dont-shade dish;
	dont-cache dish;
	dont-shade blinks;
	dont-cache blinks;
	dont-cache pad;
	dont-shade beam1;
	dont-shade beam2;
	dont-shade block1;
	dont-shade block2;
	dont-shade bump1;
	dont-shade bump2;
	dont-shade conduit1;
	dont-shade conduit2;
	dont-shade gun1;
	dont-shade gun2;
	dont-shade head1;
	dont-shade head2;
	dont-shade pad;
	dont-shade pedistal;
	dont-shade sleeve1;
	dont-shade sleeve2;
	unitviewer = FALSE;
	spray=0;
	call-script InitState();
	start-script SmokeUnit();
	while(get BUILD_PERCENT_LEFT)
		{
		sleep 1000;
		}
	spin dish around y-axis speed <150>;
	}

QueryNanoPiece(piecenum)
	{
	if( spray == 0 )
		{
		piecenum=beam1;
		}
	if( spray != 0 )
		{
		piecenum=beam2;
		}
	spray = !spray;
	}

Demo()
	{
	unitviewer = TRUE;
	}

Activate()
	{
	signal SIG_ACTIVATE;
	start-script RequestState( ACTIVE );
	}

Deactivate()
	{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	if (!unitviewer)
		{
		sleep 5000;
		}
	set-signal-mask 0;
	start-script RequestState( INACTIVE );
	}

StartBuilding()
	{
	spin pad around y-axis speed <30>;
	}


StopBuilding()
	{
	stop-spin pad around y-axis;
	}

QueryBuildInfo(piecenum)
	{
	piecenum=pad;
	}

SweetSpot(piecenum)
	{
	piecenum=base;
	}

Killed( severity, corpsetype )
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode base type		BITMAPONLY | BITMAP1;
		explode beam1 type		BITMAPONLY | BITMAP2;
		explode beam2 type		BITMAPONLY | BITMAP3;
		explode block1 type		BITMAPONLY | BITMAP4;
		explode block2 type		BITMAPONLY | BITMAP5;
		explode conduit2 type		BITMAPONLY | BITMAP1;
		explode blinks type		BITMAPONLY | BITMAP2;
		explode dish type		BITMAPONLY | BITMAP3;
		explode gun1 type		BITMAPONLY | BITMAP4;
		explode gun2 type		BITMAPONLY | BITMAP5;
		explode head1 type		BITMAPONLY | BITMAP1;
		explode head2 type		BITMAPONLY | BITMAP2;
		explode pad type		BITMAPONLY | BITMAP3;
		explode pedistal type		BITMAPONLY | BITMAP4;
		explode sleeve1 type		BITMAPONLY | BITMAP5;
		explode sleeve2 type		BITMAPONLY | BITMAP1;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode base type		BITMAPONLY | BITMAP1;
		explode beam1 type		FALL | BITMAP2;
		explode beam2 type		FALL | BITMAP3;
		explode block1 type		BITMAPONLY | BITMAP4;
		explode block2 type		BITMAPONLY | BITMAP5;
		explode bump1 type		FALL | BITMAP5;
		explode bump2 type		FALL | BITMAP5;
		explode conduit1 type		FALL | BITMAP5;
		explode conduit2 type		FALL | BITMAP1;
		explode blinks type		FALL | BITMAP2;
		explode dish type		FALL | BITMAP3;
		explode gun1 type		FALL | BITMAP4;
		explode gun2 type		FALL | BITMAP5;
		explode head1 type		SHATTER | BITMAP1;
		explode head2 type		SHATTER | BITMAP2;
		explode pad type		BITMAPONLY | BITMAP3;
		explode pedistal type		BITMAPONLY | BITMAP4;
		explode sleeve1 type		FALL | BITMAP5;
		explode sleeve2 type		FALL | BITMAP1;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode base type		BITMAPONLY | BITMAP1;
		explode beam1 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode beam2 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode block1 type		BITMAPONLY | BITMAP4;
		explode block2 type		BITMAPONLY | BITMAP5;
		explode bump1 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode bump2 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode conduit1 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode conduit2 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode blinks type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode dish type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode gun1 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode gun2 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode head1 type		SHATTER | BITMAP1;
		explode head2 type		SHATTER | BITMAP2;
		explode pad type		BITMAPONLY | BITMAP3;
		explode pedistal type		BITMAPONLY | BITMAP4;
		explode sleeve1 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode sleeve2 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return( 0 );
		}

	corpsetype = 3;
	explode base type		BITMAPONLY | BITMAP1;
	explode beam1 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode beam2 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode block1 type		BITMAPONLY | BITMAP4;
	explode block2 type		BITMAPONLY | BITMAP5;
	explode bump1 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode bump2 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode conduit1 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode conduit2 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode blinks type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode dish type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode gun1 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode gun2 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode head1 type		SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode head2 type		SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode pad type		BITMAPONLY | BITMAP3;
	explode pedistal type		BITMAPONLY | BITMAP4;
	explode sleeve1 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode sleeve2 type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	return( 0 );
	}
