// Core Aircraft Carrier

piece base,pad1,pad2;

static-var padflip;

#define SIG_WAKE	2
#define SMOKEPIECE1 base
#include "smokeunit.h"
#include "exptype.h"
#include "SFXtype.h"

Create()
	{
	padflip = 0;
	start-script SmokeUnit();
	while(get BUILD_PERCENT_LEFT)
		{
		sleep 1000;
		}
	spin dish around y-axis speed <60>;
	}

StartMoving()
	{
	signal SIG_WAKE;
	set-signal-mask SIG_WAKE;
	while (TRUE)
		{
		emit-sfx SFXTYPE_WAKE1 from wake1;
		emit-sfx SFXTYPE_WAKE1 from wake2;
		sleep 300;
		}
	}

StopMoving()
	{
	signal SIG_WAKE;
	}

SweetSpot(piecenum)
	{
	piecenum = base;
	}

QueryLandingPad(piece1,piece2)
	{
	piece1=1;
	piece2=2;

	padflip = !padflip;
	if (padflip)
		{
		piece1=2;
		piece2=1;
		}
	}

Killed( severity, corpsetype )
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode base type	BITMAPONLY | BITMAP1;
		explode dish type	BITMAPONLY | BITMAP2;
		explode pad1 type	BITMAPONLY | BITMAP3;
		explode pad2 type	BITMAPONLY | BITMAP4;
		explode wake1 type	BITMAPONLY | BITMAP5;
		explode wake2 type	BITMAPONLY | BITMAP1;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode base type	BITMAPONLY | BITMAP1;
		explode dish type	SHATTER | BITMAP2;
		explode pad1 type	FALL | BITMAP3;
		explode pad2 type	FALL | BITMAP4;
		explode wake1 type	FALL | BITMAP5;
		explode wake2 type	FALL | BITMAP1;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode base type	BITMAPONLY | BITMAP1;
		explode dish type	SHATTER | BITMAP2;
		explode pad1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode pad2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode wake1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode wake2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return( 0 );
		}

	corpsetype = 3;
	explode base type	BITMAPONLY | BITMAP1;
	explode dish type	SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode pad1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode pad2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode wake1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode wake2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	return( 0 );
	}
