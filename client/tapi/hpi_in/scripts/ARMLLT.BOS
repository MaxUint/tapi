// Arm Laser Defense Battery

piece base,flare,turret;

#define SIG_AIM	2
#define SMOKEPIECE1 base

#include "smokeunit.h"
#include "EXPtype.h"

Create()
	{
	hide flare;
	dont-cache flare;
	dont-cache turret;
	dont-cache sleeve;
	dont-cache barrel;
	dont-shade flare;
	dont-shade turret;
	dont-shade sleeve;
	dont-shade barrel;
	start-script SmokeUnit();
	}

AimPrimary(heading,pitch)
	{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <300>;
	turn sleeve to x-axis (0-pitch) speed <200>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	return(TRUE);
	}

FirePrimary()
	{
	show flare;
	sleep 150;
	hide flare;
	}

AimFromPrimary(piecenum)
	{
	piecenum=turret;
	}

QueryPrimary(piecenum)
	{
	piecenum=flare;
	}

SweetSpot(piecenum)
	{
	piecenum=base;
	}

Killed( severity, corpsetype )
	{
	hide flare;
	if (severity <= 25)
		{
		corpsetype = 1;
		explode barrel type	BITMAPONLY | BITMAP1;
		explode base type	BITMAPONLY | BITMAP2;
		explode flare type	BITMAPONLY | BITMAP3;
		explode sleeve type	BITMAPONLY | BITMAP4;
		explode turret type	BITMAPONLY | BITMAP5;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode barrel type	FALL | BITMAP1;
		explode base type	BITMAPONLY | BITMAP2;
		explode flare type	FALL | BITMAP3;
		explode sleeve type	SHATTER | BITMAP4;
		explode turret type	FALL | BITMAP5;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode barrel type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode base type	BITMAPONLY | BITMAP2;
		explode flare type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode sleeve type	SHATTER | BITMAP4;
		explode turret type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		return( 0 );
		}

	corpsetype = 3;
	explode barrel type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode base type	BITMAPONLY | BITMAP2;
	explode flare type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode sleeve type	SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode turret type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	return( 0 );
	}
