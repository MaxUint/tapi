// CORE Hurricane Script

piece flare1,flare2,base,bombs,turret;

static-var	restore_delay, fire;

#define SIG_AIM		2
#define SMOKEPIECE1 base
#define ANIM_VARIABLE TRUE

#include "StateChg.h"
#include "..\anim3d\corhurc\activatescr.bos"
#include "..\anim3d\corhurc\deactivatescr.bos"
#include "smokeunit.h"
#include "exptype.h"

#define ACTIVATECMD call-script activatescr();
#define DEACTIVATECMD call-script deactivatescr();
#include "StateChg.h"

Create()
	{
	hide flare1;
	hide flare2;
	fire = 0;
	restore_delay=3000;
	call-script InitState();
	start-script SmokeUnit();
	}

Activate()
	{
	start-script RequestState( ACTIVE );
	}

Deactivate()
	{
	start-script RequestState( INACTIVE );
	}

RestoreAfterDelay()
	{
	sleep restore_delay;
	turn turret to y-axis 0 speed <90>;
	turn barrels to x-axis 0 speed <50>;
	}

QueryPrimary(piecenum)
	{
	piecenum=bombs;
	}

QuerySecondary(piecenum)
	{
	piecenum = fire;
	}

AimSecondary(heading,pitch)
	{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <390>;
	turn barrels to x-axis pitch speed <350>;
	wait-for-turn turret around y-axis;
	wait-for-turn barrels around x-axis;
	start-script RestoreAfterDelay();
	return(TRUE);
	}

FireSecondary()
	{
	if (fire == 0)
		{
		show flare1;
		sleep 150;
		hide flare1;
		}

	if (fire == 1)
		{
		show flare2;
		sleep 150;
		hide flare2;
		}
	fire = !fire;
	}

AimFromSecondary(piecenum)
	{
	piecenum=turret;
	}

SweetSpot(piecenum)
	{
	piecenum=base;
	}

Killed( severity, corpsetype )
	{
	hide flare1;
	hide flare2;
	if (severity <= 25)
		{
		corpsetype = 1;
		explode barrels type	BITMAPONLY | BITMAP1;
		explode base type	BITMAPONLY | BITMAP2;
		explode bombs type	BITMAPONLY | BITMAP3;
		explode flare1 type	BITMAPONLY | BITMAP4;
		explode flare2 type	BITMAPONLY | BITMAP5;
		explode tail1 type	BITMAPONLY | BITMAP1;
		explode tail2 type	BITMAPONLY | BITMAP2;
		explode thrusta1 type	BITMAPONLY | BITMAP3;
		explode thrusta2 type	BITMAPONLY | BITMAP4;
		explode turret type	BITMAPONLY | BITMAP1;
		explode wing1 type	BITMAPONLY | BITMAP2;
		explode wing2 type	BITMAPONLY | BITMAP3;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode barrels type	FALL | BITMAP1;
		explode base type	BITMAPONLY | BITMAP2;
		explode bombs type	FALL | BITMAP3;
		explode flare1 type	FALL | BITMAP4;
		explode flare2 type	FALL | BITMAP5;
		explode tail1 type	FALL | BITMAP1;
		explode tail2 type	FALL | BITMAP2;
		explode thrusta1 type	FALL | BITMAP3;
		explode thrusta2 type	FALL | BITMAP4;
		explode turret type	FALL | BITMAP1;
		explode wing1 type	SHATTER | BITMAP2;
		explode wing2 type	BITMAPONLY | BITMAP3;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode barrels type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode base type	BITMAPONLY | BITMAP2;
		explode bombs type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode flare1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode flare2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode tail1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode tail2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode thrusta1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode thrusta2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode turret type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wing1 type	SHATTER | BITMAP2;
		explode wing2 type	BITMAPONLY | BITMAP3;
		return( 0 );
		}

	corpsetype = 3;
	explode barrels type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode base type	BITMAPONLY | BITMAP2;
	explode bombs type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode flare1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode flare2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode tail1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode tail2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode thrusta1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode thrusta2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode turret type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wing1 type	SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode wing2 type	BITMAPONLY | BITMAP3;
	return( 0 );
	}
